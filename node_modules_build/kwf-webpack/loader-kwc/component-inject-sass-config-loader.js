const fs = require('fs');
const loaderUtils = require("loader-utils");
const jsValueToSassString = require('json-to-scss/lib/jsValueToSassString');

module.exports = function(source, map) {
    var query = loaderUtils.parseQuery(this.query);

    if (!query.cls) {
        this.emitError("Missing loader parameter cls");
        return;
    }
    const componentClass = query.cls;

    this.cacheable();

    var configPath = 'temp/component-assets-build/scss-config-'+componentClass+'.json';

    if (fs.existsSync(configPath)) {
        this.addDependency(configPath);

        var config = JSON.parse(fs.readFileSync(configPath, 'utf-8'));

        source = '$config: ' + jsValueToSassString(config.config) + ';\n' + source;
    }

    return source;
};
